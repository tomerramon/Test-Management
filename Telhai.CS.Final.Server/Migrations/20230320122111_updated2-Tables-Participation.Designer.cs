// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Telhai.CS.Final.Server.ModelsDB;

#nullable disable

namespace Telhai.CS.Final.Server.Migrations
{
    [DbContext(typeof(ExamDbContext))]
    [Migration("20230320122111_updated2-Tables-Participation")]
    partial class updated2TablesParticipation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Telhai.CS.Final.Server.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "IsCorrect");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Text");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasAnnotation("Relational:JsonPropertyName", "Answers");
                });

            modelBuilder.Entity("Telhai.CS.Final.Server.Models.Error", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Currect_Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Currect_Answer");

                    b.Property<int?>("ParticipationId")
                        .HasColumnType("int");

                    b.Property<string>("Question_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Question_Description");

                    b.Property<string>("Selected_Asnwer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Selected_Asnwer");

                    b.HasKey("Id");

                    b.HasIndex("ParticipationId");

                    b.ToTable("Errors");

                    b.HasAnnotation("Relational:JsonPropertyName", "Errors");
                });

            modelBuilder.Entity("Telhai.CS.Final.Server.Models.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "Date");

                    b.Property<bool>("IsRandom")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "IsRandom");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Name");

                    b.Property<string>("Str_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Str_Id");

                    b.Property<string>("TeacherFName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "TeacherFName");

                    b.Property<string>("TeacherLNmae")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "TeacherLNmae");

                    b.Property<int>("TotalHours")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "TotalHours");

                    b.Property<int>("TotalMinutes")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "TotalMinutes");

                    b.HasKey("Id");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("Telhai.CS.Final.Server.Models.Participation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ExamId")
                        .HasColumnType("int");

                    b.Property<int>("Exam_Id")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Exam_Id");

                    b.Property<double>("Grade")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "Grade");

                    b.Property<int>("Student_Id")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Student_Id");

                    b.Property<string>("Student_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Student_Name");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("Participations");

                    b.HasAnnotation("Relational:JsonPropertyName", "Participations");
                });

            modelBuilder.Entity("Telhai.CS.Final.Server.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CurrectAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "CurrectAnswer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Description");

                    b.Property<int?>("ExamId")
                        .HasColumnType("int");

                    b.Property<string>("Str_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Str_Id");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("Questions");

                    b.HasAnnotation("Relational:JsonPropertyName", "Questions");
                });

            modelBuilder.Entity("Telhai.CS.Final.Server.Models.Answer", b =>
                {
                    b.HasOne("Telhai.CS.Final.Server.Models.Question", null)
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Telhai.CS.Final.Server.Models.Error", b =>
                {
                    b.HasOne("Telhai.CS.Final.Server.Models.Participation", null)
                        .WithMany("Errors")
                        .HasForeignKey("ParticipationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Telhai.CS.Final.Server.Models.Participation", b =>
                {
                    b.HasOne("Telhai.CS.Final.Server.Models.Exam", null)
                        .WithMany("Participations")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Telhai.CS.Final.Server.Models.Question", b =>
                {
                    b.HasOne("Telhai.CS.Final.Server.Models.Exam", null)
                        .WithMany("Questions")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Telhai.CS.Final.Server.Models.Exam", b =>
                {
                    b.Navigation("Participations");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Telhai.CS.Final.Server.Models.Participation", b =>
                {
                    b.Navigation("Errors");
                });

            modelBuilder.Entity("Telhai.CS.Final.Server.Models.Question", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
